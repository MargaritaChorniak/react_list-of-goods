{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortLength","setState","LENGTH","sortAlphabetically","ALPHABET","reverseList","resetList","this","visibleArray","goods","visibleGoods","sort","a","b","length","localeCompare","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGW,SAARD,OAAQ,eAARA,IAAQ,uBAARA,IAAQ,oBAARA,MAAQ,KA0CN,IAAME,EAAG,iKA2BZ,OA3BY,oCACdC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MACnB,EAEFC,WAAa,WACX,EAAKC,SAAS,CAAEH,SAAUL,EAASS,UACnC,EAEFC,mBAAqB,WACnB,EAAKF,SAAS,CACZH,SAAUL,EAASW,YAErB,EAEFC,YAAc,WACZ,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAErB,EAEFS,UAAY,WACV,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAEtB,EAkEA,OAlEA,mCAED,WACE,MAAiCQ,KAAKX,MAA9BC,EAAU,EAAVA,WAAYC,EAAQ,EAARA,SACdU,EA9DH,SACLC,EAAgB,GAEf,IADCX,EAAQ,EAARA,SAAUD,EAAU,EAAVA,WAENa,EAAY,YAAOD,GAEzB,OAAQX,GACN,KAAKL,EAASS,OACZQ,EAAaC,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEE,OAASD,EAAEC,UACzC,MAEF,KAAKrB,EAASW,SACZM,EAAaC,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEG,cAAcF,MAWhD,OAJIhB,GACFa,EAAaM,UAGRN,EAuCgBO,CAAkBvB,EAAiBa,KAAKX,OAE7D,OACE,sBAAKsB,UAAU,kBAAiB,UAC9B,sBAAKA,UAAU,UAAS,UACtB,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYtB,IAAaL,EAASW,WAEtCiB,QAASd,KAAKJ,mBAAmB,SAClC,wBAID,wBACEgB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYtB,IAAaL,EAASS,SAEtCmB,QAASd,KAAKP,WAAW,SAC1B,mBAID,wBACEmB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAA2B,IAAfvB,IAEhBwB,QAASd,KAAKF,YAAY,SAC3B,aAICP,IAAaL,EAASM,MAAQF,IAC9B,wBACEsB,KAAK,SACLD,UAAU,4BACVG,QAASd,KAAKD,UAAU,SACzB,aAKL,6BACE,6BACGE,EAAac,KAAI,SAACC,GACjB,OACE,oBAAI,UAAQ,OAAM,SAAaA,GAAPA,iBAOrC,EA7Fa,CAASC,IAAMC,WCzD/BC,IAASC,OACP,cAAC,EAAG,IACJC,SAASC,eAAe,W","file":"static/js/main.a31672c5.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  sortAlphabetically = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  reverseList = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  resetList = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const visibleArray = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': isReversed === false },\n            )}\n            onClick={this.reverseList}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.resetList}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n        <ul>\n          <ul>\n            {visibleArray.map((good) => {\n              return (\n                <li data-cy=\"Good\" key={good}>{good}</li>\n              );\n            })}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}